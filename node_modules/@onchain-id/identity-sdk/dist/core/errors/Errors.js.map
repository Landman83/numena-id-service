{"version":3,"file":"Errors.js","sourceRoot":"","sources":["../../../src/core/errors/Errors.ts"],"names":[],"mappings":";;;AAaA;;GAEG;AACH,MAAa,uBAAwB,SAAQ,KAAK;IAChD,YAAmB,EAAE,OAAO,GAAG,mDAAmD,KAA2B,EAAE;QAC7G,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,yBAAyB,CAAC;QAEtC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,CAAC;IACjE,CAAC;CACF;AAPD,0DAOC;AAED;;GAEG;AACH,MAAa,oBAAqB,SAAQ,KAAK;IAC7C,YAAmB,OAAO,GAAG,4HAA4H;QACvJ,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;IACjC,CAAC;CACF;AALD,oDAKC","sourcesContent":["export interface ErrorParams {\n  message?: string;\n}\n\nexport interface ValueErrorParams extends ErrorParams{\n  value?: any;\n}\n\nexport interface ValueError {\n  message: string;\n  value?: any;\n}\n\n/**\n * Thrown when an operation is executed with insufficient privileges\n */\nexport class OperationForbiddenError extends Error {\n  public constructor({ message = 'Insufficient privileges to execute the operation.' }: { message?: string } = {}) {\n    super(message);\n    this.name = 'OperationForbiddenError';\n\n    Object.setPrototypeOf(this, OperationForbiddenError.prototype);\n  }\n}\n\n/**\n * Thrown when attempting to set an Invalid BlockChain Provider.\n */\nexport class InvalidProviderError extends Error {\n  public constructor(message = 'Specified Provider is not valid. Must be either a default network name, a json RPC address, a Provider or a Signer object.') {\n    super(message);\n    this.name = 'INVALID_PROVIDER';\n  }\n}\n"]}