{"version":3,"file":"Claim.interface.js","sourceRoot":"","sources":["../../src/claim/Claim.interface.ts"],"names":[],"mappings":";;;AAEA,IAAY,UAEX;AAFD,WAAY,UAAU;IACpB,yCAAO,CAAA;AACT,CAAC,EAFW,UAAU,0BAAV,UAAU,QAErB;AAED,IAAY,WAEX;AAFD,WAAY,WAAW;IACrB,6CAAQ,CAAA;AACV,CAAC,EAFW,WAAW,2BAAX,WAAW,QAEtB;AAED,IAAY,WAMX;AAND,WAAY,WAAW;IACrB,oCAAqB,CAAA;IACrB,8BAAe,CAAA;IACf,kCAAmB,CAAA;IACnB,sCAAuB,CAAA;IACvB,kCAAmB,CAAA;AACrB,CAAC,EANW,WAAW,2BAAX,WAAW,QAMtB","sourcesContent":["import { SignerModuleInterface } from \"../core/SignerModule\";\n\nexport enum ClaimTopic {\n  KYC = 1,\n}\n\nexport enum ClaimScheme {\n  SOME = 1,\n}\n\nexport enum ClaimStatus {\n  EXPECTED = 'EXPECTED', // Can receive access grants, but has no data yet.\n  READY = 'READY', // Claim has been generated, but not issued to BlockChain yet.\n  PENDING = 'PENDING', // Claim has been issued issued to BlockChain but transaction is awaiting confirmation.\n  CONFIRMED = 'CONFIRMED', // Claim issued to BlockChain.\n  REVOKED = 'REVOKED', // Claim has been revoked.\n}\n\nexport interface ClaimData {\n  address?: string;\n  data?: string;\n  hash?: string;\n  emissionDate?: Date;\n  id?: string;\n  issuanceDate?: Date;\n  issuer?: string;\n  publicData?: object;\n  privateData?: object;\n  scheme?: number;\n  signature?: string;\n  status?: ClaimStatus;\n  topic?: number;\n  uri?: string;\n}\n\nexport interface ClaimObject extends ClaimData {\n  generateHash(topic?: ClaimTopic, issuanceDate?: Date, publicData?: object, privateData?: object): string;\n  sign(signer?: SignerModuleInterface): Promise<string>;\n}\n"]}